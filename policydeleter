#!/bin/bash

##########################################################
#
#
#   Unused Policy Deleter for Jamf using Classic API 
#	By: Chris Zimmerman 
#
#
##########################################################

################ DISCLAIMER #############################
#
# There is no undo button when you push out this script, make
# sure you have double checked the id's of the policies you
# are about to delete. Not responsible for any unwanted data loss.
#
###########################################################

############### SET UP ###################################
#
#
#  Make a list of the policy ids in a CSV Document (for your sake you can also put the policy name) 
# 
#  It should be formatted something along these lines
# 
#  Policy ID, whatever you want, whatever you want
#  Policy ID, whatever you want, whatever you want
#  Policy ID, whatever you want, whatever you want 
#  
# Make sure no extra lines exist in your CSV File otherwise prompts
# will be inaccurate.
##########################################################


############## BEGIN VARIABLES ###########################

###### USER WITH DELETE PERMISSIONS FOR POLICY########
# Needs to a user with the delete permission for policies #
username=""
password=""
#### https://yourinstance.jamf.com
jurl=""
#### The CSV Document that you are reading from ######### 
#### Example: /Users/Shared/deletethesepolicies.csv #####
csvpath=""


# Begin Authentication
classicCredentials=$(printf "${username}:${password}" | /usr/bin/iconv -t ISO-8859-1 | /usr/bin/base64 -i - )

# generate an auth token
authToken=$( /usr/bin/curl "${jurl}/uapi/auth/tokens" \
--silent \
--request POST \
--header "Authorization: Basic ${classicCredentials}" )

# Create Bearer Token for API Call 
token=$( /usr/bin/awk -F \" '{ print $4 }' <<< "$authToken" | /usr/bin/xargs )

# Count the number of lines in the CSV Document
countlines=$(wc -l < $csvpath | tr -s " ")
numberofpolcies=$(($countlines +1))

#prompt user to let them know how many policies are about to be deleted
doublecheck=$(/Library/Application\ Support/JAMF/bin/jamfHelper.app/Contents/MacOS/jamfHelper\
				-windowType hud\
				-description "You are about to delete $numberofpolcies policies. Do you want to continue? There is no turning back once you click 'Yes'"\
				-button1 "Yes"\
				-button2 "No"\
				-defaultButton 1)

echo "$numberofpolcies"
echo "$doublecheck"

if [[ $doublecheck -eq "0" ]]; then
	
	while IFS="," read -r policytodelete rec_remaining; do
		
		curl -s "$jurl/JSSResource/policies/id/$policytodelete" -H  "Authorization: Bearer $token" -H "content-type: text/xml" -X DELETE
		
	done < $csvpath
	
	if [ $numberofpolcies -gt "1" ]; then
		
		/Library/Application\ Support/JAMF/bin/jamfHelper.app/Contents/MacOS/jamfHelper\
		-windowType hud\
		-description "You have successfully deleted $numberofpolcies policies"\
		-button1 "OK"\
		-defaultButton 1
	else
		/Library/Application\ Support/JAMF/bin/jamfHelper.app/Contents/MacOS/jamfHelper\
		-windowType hud\
		-description "You have deleted one policy."\
		-button1 "OK"\
		-defaultButton 1
	fi
else
	
	/Library/Application\ Support/JAMF/bin/jamfHelper.app/Contents/MacOS/jamfHelper\
	-windowType hud\
	-description "No Policies have been deleted"\
	-button1 "OK"\
	-defaultButton 1
fi
	
